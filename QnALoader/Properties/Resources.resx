<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="factSheetIdList" xml:space="preserve">
    <value>BR04
CEP01
CEP03
CON01
CON02
CON03
CON04
CON05
CON06
CON07
CON08
DP01
DP02
DP13
DP15
DP18
DP22
DP23
DP28
DP29
DP30
DP42
DP43
DP50
DP60
DP68
DP71
DP72
DP73
DP74
DP75
DP76
DP78
DP79
DP81
DP82
DP83
DP84
DP85
DVA03
DVA06
DVA19
DVA21
DVA23
F111-01
F111-02
F111-03
F111-04
F111-05
F111-07
F111-09
FIP01
FIP02
FIP04
GS01
GS02
GS03
GS04
GS05
HAC01
HAC02
HCS01
HCS05
HCS10
HIP01
HIP06
HIP40
HIP72
HIP80
HIP90
HSV01
HSV02
HSV03
HSV05
HSV06
HSV10
HSV100
HSV101
HSV107
HSV108
HSV109
HSV120
HSV13
HSV131
HSV132
HSV136
HSV137
HSV139
HSV14
HSV140
HSV16
HSV17
HSV18
HSV19
HSV20
HSV21
HSV22
HSV23
HSV27
HSV29
HSV30
HSV59
HSV60
HSV61
HSV62
HSV64
HSV65
HSV69
HSV74
HSV77
HSV80
HSV92
HSV93
HSV97
HSV99
IP01
IS01
IS02
IS03
IS04
IS05
IS06
IS07
IS08
IS09
IS10
IS101
IS103
IS104
IS105
IS106
IS115
IS116
IS117
IS12
IS121
IS122
IS125
IS126
IS135
IS137
IS138
IS139
IS140
IS141
IS142
IS143
IS144
IS145
IS147
IS15
IS150
IS151
IS154
IS155
IS156
IS158
IS159
IS16
IS160
IS161
IS163
IS164
IS165
IS166
IS167
IS168
IS18
IS184
IS185
IS186
IS187
IS188
IS19
IS29
IS30
IS34
IS35
IS44
IS45
IS46
IS47
IS48
IS50
IS57
IS58
IS65
IS71
IS72
IS73
IS74
IS75
IS77
IS79
IS81
IS82
IS85
IS86
IS87
IS88
IS89
IS90
IS91
IS92
IS94
IS95
IS96
IS97
IS98
IS99
LEG01(a)
LEG01(b)
LEG02
MCS01
MCS07
MCS13
MRC01
MRC04
MRC05
MRC07
MRC08
MRC09
MRC10
MRC17
MRC18
MRC25
MRC27
MRC30
MRC31
MRC33
MRC34
MRC35
MRC36
MRC39
MRC40
MRC41
MRC42
MRC43
MRC45
MRC47
MRC49
MRC50
NR01
POW01
POW02
VCS01
VCS02
VCS03
VRB01
VRB02
VRB03
VRB04
VRB05
VRB06
WG01
WG02</value>
  </data>
</root>